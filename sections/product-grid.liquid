{% comment %}
Product Grid (6) with Quick View
- Choose 6 products individually
- Hover effect on product card
- Responsive grid: 2 cols mobile, 3 cols desktop
{% endcomment %}

<section id="section-{{ section.id }}" class="custom-grid">
  <div class="grid">
    {% for block in section.blocks %}
      {% if block.settings.product != blank %}
        {% assign prod = all_products[block.settings.product] %}
        <div class="card" {{ block.shopify_attributes }}>
          <a href="{{ prod.url }}" class="card-media">
            {% if prod.featured_image %}
              <img 
                src="{{ prod.featured_image | img_url: '600x' }}" 
                alt="{{ prod.title }}" 
                loading="lazy" 
              />
            {% endif %}
            <div class="hover-overlay">
              <button 
                class="quick-btn" 
                type="button" 
                aria-label="Quick view for {{ prod.title }}"
                data-handle="{{ prod.handle }}" 
                data-desc="{{ prod.description | strip_html | escape }}"
              >
                Quick View
              </button>
            </div>
          </a>
          <div class="card-body">
            <h3 class="card-title">{{ prod.title }}</h3>
            <div class="card-price">
              {% if prod.price_varies %}
                From {{ prod.price_min | money }}
              {% else %}
                {{ prod.price | money }}
              {% endif %}
            </div>
          </div>
        </div>
      {% else %}
        <div class="placeholder">Select a product</div>
      {% endif %}
    {% endfor %}
  </div>

  <!-- Modal Root -->
  <dialog class="pv-modal" id="pv-{{ section.id }}-modal" aria-label="Quick view">
    <form method="dialog"><button class="pv-close" aria-label="Close quick view">×</button></form>
    <div class="pv-content">
      <div class="pv-media"></div>
      <div class="pv-info">
        <h3 class="pv-title"></h3>
        <div class="pv-price"></div>
        <div class="pv-desc"></div>
        <form class="pv-form">
          <input type="hidden" name="id" class="pv-variant-id" />
          <button type="submit" class="pv-add" aria-label="Add to cart">Add to cart</button>
        </form>
        <div class="pv-status" role="status" aria-live="polite"></div>
      </div>
    </div>
  </dialog>
</section>

<style>
/* Grid */
.custom-grid .grid { 
  display: grid; 
  grid-template-columns: repeat(2, 1fr); 
  gap: 16px; 
}
@media (min-width: 768px){
  .custom-grid .grid { grid-template-columns: repeat(3, 1fr); gap: 20px; }
}

/* Card */
.card { 
  border: 1px solid rgba(0,0,0,.08); 
  border-radius: 12px; 
  overflow: hidden; 
  position: relative; 
  transition: transform .25s ease; 
}
.card:hover { transform: translateY(-4px); }

/* Image + overlay */
.card-media { 
  position: relative; 
  display: block; 
  overflow: hidden; 
}
.card-media img { 
  width: 100%; 
  height: auto; 
  transition: transform .3s ease; 
}
.card:hover img { transform: scale(1.05); }

.hover-overlay { 
  position: absolute; 
  inset: 0; 
  background: rgba(0,0,0,.45); 
  display: flex; 
  align-items: center; 
  justify-content: center; 
  opacity: 0; 
  transition: opacity .3s ease; 
}
.card:hover .hover-overlay { opacity: 1; }

.quick-btn { 
  background: #fff; 
  border: none; 
  padding: 10px 16px; 
  border-radius: 6px; 
  cursor: pointer; 
  font-size: 14px; 
  font-weight: 600; 
}

/* Card body */
.card-body { padding: 12px; text-align: center; }
.card-title { font-size: 16px; margin: 0 0 4px; }
.card-price { font-weight: 600; }

/* Modal */
.pv-modal { width: min(700px, 92vw); border: none; border-radius: 16px; padding: 0; }
.pv-modal::backdrop { background: rgba(0,0,0,.45); }
.pv-content { padding: 20px; }
.pv-close { position: absolute; inset: 8px 8px auto auto; border: none; background: #fff; border-radius: 999px; width: 36px; height: 36px; font-size: 20px; }
.pv-title { font-size: 22px; margin-bottom: 8px; }
.pv-price { font-weight: 700; margin-bottom: 8px; }
.pv-desc { font-size: 14px; margin-bottom: 12px; }
.pv-add { padding: 10px 16px; border: 1px solid currentColor; border-radius: 6px; }
</style>

<script>
(function(){
  const root = document.getElementById('section-{{ section.id }}');
  const modal = root.querySelector('.pv-modal');
  const mediaEl = modal.querySelector('.pv-media');
  const titleEl = modal.querySelector('.pv-title');
  const priceEl = modal.querySelector('.pv-price');
  const descEl = modal.querySelector('.pv-desc');
  const variantInput = modal.querySelector('.pv-variant-id');
  const form = modal.querySelector('.pv-form');
  const statusEl = modal.querySelector('.pv-status');

  // Trap focus in modal for accessibility
  function trapFocus(element) {
    const focusableEls = element.querySelectorAll('a, button, textarea, input, select, [tabindex]:not([tabindex="-1"])');
    const firstFocusableEl = focusableEls[0];  
    const lastFocusableEl = focusableEls[focusableEls.length - 1];

    element.addEventListener('keydown', function(e) {
      if (e.key === 'Tab') {
        if (e.shiftKey) { // shift + tab
          if (document.activeElement === firstFocusableEl) {
            e.preventDefault();
            lastFocusableEl.focus();
          }
        } else { // tab
          if (document.activeElement === lastFocusableEl) {
            e.preventDefault();
            firstFocusableEl.focus();
          }
        }
      }
    });
  }

  root.querySelectorAll('.quick-btn').forEach(btn => {
    btn.addEventListener('click', async () => {
      const handle = btn.getAttribute('data-handle');
      const desc = btn.getAttribute('data-desc');
      try {
        const res = await fetch(`/products/${handle}.js`);
        const product = await res.json();

        titleEl.textContent = product.title;
        priceEl.textContent = Shopify.formatMoney(product.variants[0].price);
        descEl.textContent = desc || "";
        mediaEl.innerHTML = product.images[0] ? `<img src="${product.images[0]}" alt="${product.title}">` : "";

        variantInput.value = product.variants[0].id;

        if (typeof modal.showModal === 'function') modal.showModal();
        else modal.setAttribute('open','');

        trapFocus(modal);

        form.onsubmit = async (e) => {
          e.preventDefault();
          statusEl.textContent = 'Adding...';
          const res = await fetch('/cart/add.js', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ items: [{ id: Number(variantInput.value), quantity: 1 }] })
          });
          if(res.ok){
            statusEl.textContent = 'Added to cart!';
          } else {
            statusEl.textContent = 'Error adding to cart.';
          }
        };
      } catch(err){
        console.error(err);
        statusEl.textContent = 'Failed to load product.';
      }
    });
  });

  modal.querySelector('.pv-close').addEventListener('click', () => {
    if(typeof modal.close === 'function'){ modal.close(); } 
    else { modal.removeAttribute('open'); }
  });
})();
</script>

{% schema %}
{
  "name": "Product Grid (6) — Quick View",
  "settings": [],
  "blocks": [
    {
      "type": "product",
      "name": "Product 1",
      "settings": [
        { "type": "product", "id": "product", "label": "Select product" }
      ]
    },
    {
      "type": "product",
      "name": "Product 2",
      "settings": [
        { "type": "product", "id": "product", "label": "Select product" }
      ]
    },
    {
      "type": "product",
      "name": "Product 3",
      "settings": [
        { "type": "product", "id": "product", "label": "Select product" }
      ]
    },
    {
      "type": "product",
      "name": "Product 4",
      "settings": [
        { "type": "product", "id": "product", "label": "Select product" }
      ]
    },
    {
      "type": "product",
      "name": "Product 5",
      "settings": [
        { "type": "product", "id": "product", "label": "Select product" }
      ]
    },
    {
      "type": "product",
      "name": "Product 6",
      "settings": [
        { "type": "product", "id": "product", "label": "Select product" }
      ]
    }
  ],
  "max_blocks": 6,
  "presets": [
    {
      "name": "Product Grid (6) — Quick View",
      "category": "Custom"
    }
  ]
}
{% endschema %}

