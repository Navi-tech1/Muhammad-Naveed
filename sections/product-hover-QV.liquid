<script>
(function(){
  const ROOT = document.querySelector('[data-qv-root]');
  if (!ROOT) return;

  const CARD = ROOT.querySelector('.quickview-card');
  const CLOSE = ROOT.querySelector('.qv-close');
  const MEDIA = ROOT.querySelector('.qv-media');
  const TITLE = ROOT.querySelector('.qv-title');
  const PRICE = ROOT.querySelector('.qv-price');
  const DESC  = ROOT.querySelector('.qv-desc');
  const OPTS  = ROOT.querySelector('.qv-options');
  const VAR_INPUT = ROOT.querySelector('.qv-variant-id');
  const STATUS = ROOT.querySelector('.qv-status');
  const FORM = ROOT.querySelector('.qv-form');

  const BASE = (window.Shopify && Shopify.routes && Shopify.routes.root) || "{{ routes.root_url }}";
  const JACKET_VARIANT_ID = 9843130663219; // Soft Winter Jacket (Black/Medium)

  // --- Money formatter (Liquid based fallback) ---
  function formatMoney(cents){
    const moneyFormat = "{{ shop.money_format | replace: '"', '\"' }}";
    let value = (cents / 100).toFixed(2);
    return moneyFormat.replace("{{amount}}", value);
  }

  function showModal(){ ROOT.hidden = false; requestAnimationFrame(()=> ROOT.classList.add('active')); }
  function hideModal(){ ROOT.classList.remove('active'); setTimeout(()=> (ROOT.hidden = true), 250); }

  function getJSON(url, opts){
    return fetch(url, Object.assign({ headers:{ 'Accept':'application/json' } }, opts || {}))
      .then(async r => {
        if (!r.ok) throw new Error(await r.text() || ('HTTP '+r.status));
        return r.json();
      });
  }

  // --- Build Variant Selectors ---
  function buildOptions(product, currentVariant){
    OPTS.innerHTML = '';
    const selectors = [];

    if (product.options?.[0]){
      const sel1 = document.createElement('select'); sel1.dataset.index = 1;
      product.variants.forEach(v=> sel1.append(new Option(v.option1, v.option1)));
      sel1.value = currentVariant.option1; OPTS.appendChild(sel1); selectors.push(sel1);
    }
    if (product.options?.[1]){
      const sel2 = document.createElement('select'); sel2.dataset.index = 2;
      product.variants.forEach(v=> sel2.append(new Option(v.option2, v.option2)));
      sel2.value = currentVariant.option2; OPTS.appendChild(sel2); selectors.push(sel2);
    }
    if (product.options?.[2]){
      const sel3 = document.createElement('select'); sel3.dataset.index = 3;
      product.variants.forEach(v=> sel3.append(new Option(v.option3, v.option3)));
      sel3.value = currentVariant.option3; OPTS.appendChild(sel3); selectors.push(sel3);
    }

    function updateVariant(){
      const s1 = selectors[0]?.value, s2 = selectors[1]?.value, s3 = selectors[2]?.value;
      const found = product.variants.find(v =>
        (!s1 || v.option1===s1) && (!s2 || v.option2===s2) && (!s3 || v.option3===s3)
      );
      if (found){
        VAR_INPUT.value = found.id;
        PRICE.textContent = formatMoney(found.price);
      }
    }
    selectors.forEach(sel => sel.addEventListener('change', updateVariant));
  }

  function setDescription(html){
    const tmp = document.createElement('div'); tmp.innerHTML = html || '';
    DESC.textContent = (tmp.textContent || '').trim();
  }

  function refreshCartCount(){
    getJSON(`${BASE}cart.js`).then(cart => {
      const bubble = document.querySelector('.cart-count-bubble, [data-cart-count]');
      if (bubble) bubble.textContent = cart.item_count;
    });
  }

  // --- Quick View button ---
  document.addEventListener('click', function(e){
    const btn = e.target.closest('.quick-btn');
    if (!btn) return;

    const handle = btn.getAttribute('data-handle');
    if (!handle) return;

    STATUS.textContent = 'Loadingâ€¦';
    getJSON(`${BASE}products/${encodeURIComponent(handle)}.js`)
      .then(product => {
        TITLE.textContent = product.title;
        MEDIA.innerHTML = product.images.length ? `<img src="${product.images[0]}" alt="${product.title}">` : '';
        const firstVariant = product.variants[0];
        PRICE.textContent = formatMoney(firstVariant.price);
        setDescription(product.body_html);

        VAR_INPUT.value = firstVariant.id;
        buildOptions(product, firstVariant);
        STATUS.textContent = '';
        showModal();
      })
      .catch(err => {
        STATUS.textContent = 'Unable to load product: ' + err.message;
        showModal();
      });
  });

  CLOSE.addEventListener('click', hideModal);
  ROOT.addEventListener('click', e=>{ if(e.target===ROOT) hideModal(); });

  // --- Add to Cart ---
  FORM.addEventListener('submit', function(e){
    e.preventDefault();
    const variantId = VAR_INPUT.value;
    if (!variantId) { STATUS.textContent = 'Please select a variant.'; return; }

    STATUS.textContent = 'Addingâ€¦';
    getJSON(`${BASE}cart/add.js`, {
      method:'POST',
      headers:{ 'Content-Type':'application/json', 'Accept':'application/json' },
      body: JSON.stringify({ id: Number(variantId), quantity: 1 })
    })
    .then(added => {
      STATUS.textContent = `${added.product_title} added âœ…`;
      refreshCartCount();

      // Special rule â†’ add Jacket if Black + Medium
      const selects = OPTS.querySelectorAll('select');
      const selected = Array.from(selects).map(s=>s.value);
      const isBlackMedium = selected.includes('Black') && selected.includes('Medium');
      if (isBlackMedium){
        getJSON(`${BASE}cart.js`)
          .then(cart => {
            const exists = cart.items.some(item => item.id == JACKET_VARIANT_ID);
            if (!exists){
              return getJSON(`${BASE}cart/add.js`, {
                method:'POST',
                headers:{ 'Content-Type':'application/json','Accept':'application/json' },
                body: JSON.stringify({ id: JACKET_VARIANT_ID, quantity: 1 })
              }).then(()=> STATUS.textContent += ' + Jacket auto-added ðŸŽ‰');
            }
          });
      }
    })
    .catch(err => STATUS.textContent = 'Could not add: ' + err.message);
  });

})();
</script>
