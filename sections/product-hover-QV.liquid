<section id="section-{{ section.id }}" class="custom-grid">
  <div class="grid">
    {% for block in section.blocks %}
      {% if block.settings.product != blank %}
        {% assign prod = all_products[block.settings.product] %}
        <div class="card" {{ block.shopify_attributes }}>
          <a href="{{ prod.url }}" class="card-media" aria-label="{{ prod.title }}">
            {% if prod.featured_image %}
              <img src="{{ prod.featured_image | img_url: '600x' }}" alt="{{ prod.title }}" loading="lazy" />
            {% endif %}
          </a>
          <div class="hover-overlay">
            <div class="hover-info">
              <h3 class="card-title">{{ prod.title }}</h3>
              <div class="card-price">
                {% if prod.price_varies %}From {{ prod.price_min | money }}{% else %}{{ prod.price | money }}{% endif %}
              </div>
              <button class="quick-btn" data-handle="{{ prod.handle }}" aria-label="Quick view {{ prod.title }}">Quick View</button>
            </div>
          </div>
        </div>
      {% else %}
        <div class="placeholder">Select a product</div>
      {% endif %}
    {% endfor %}
  </div>
</section>

<!-- Quick View Modal -->
<div class="quickview-backdrop" data-qv-root hidden>
  <div class="quickview-card" role="dialog" aria-modal="true" aria-label="Quick view">
    <button class="qv-close" aria-label="Close">Ã—</button>
    <div class="qv-content">
      <div class="qv-media"></div>
      <div class="qv-info">
        <h3 class="qv-title"></h3>
        <div class="qv-price"></div>
        <div class="qv-desc"></div>
        <form class="qv-form">
          <div class="qv-options"></div>
          <input type="hidden" name="id" class="qv-variant-id" />
          <button type="submit" class="qv-add">ADD TO CART</button>
        </form>
        <div class="qv-status" role="status" aria-live="polite"></div>
      </div>
    </div>
  </div>
</div>

<style>
.custom-grid .grid { display:grid; grid-template-columns:repeat(2,1fr); gap:16px; }
@media(min-width:768px){ .custom-grid .grid { grid-template-columns:repeat(3,1fr); gap:20px; } }
.card { border:1px solid rgba(0,0,0,.08); border-radius:12px; overflow:hidden; position:relative; transition:transform .25s ease; }
.card:hover { transform:translateY(-4px); }
.card-media img { width:100%; transition:transform .3s ease; }
.card:hover img { transform:scale(1.05); }
.hover-overlay { position:absolute; inset:0; background:rgba(0,0,0,.6); color:#fff; display:flex; align-items:center; justify-content:center; opacity:0; transition:opacity .3s ease; }
.card:hover .hover-overlay { opacity:1; }
.card-title,.card-price{color:#fff;}
.quick-btn { background:#fff; color:#000; padding:8px 14px; border:none; border-radius:6px; cursor:pointer; font-weight:600; }

/* Modal */
.quickview-backdrop { position:fixed; inset:0; background:rgba(0,0,0,.6); display:flex; align-items:center; justify-content:center; z-index:1000; opacity:0; pointer-events:none; transition:opacity .25s ease; }
.quickview-backdrop.active { opacity:1; pointer-events:auto; }
.quickview-card { background:#fff; border-radius:12px; max-width:900px; width:92vw; padding:20px; position:relative; transform:translateY(24px); opacity:0; transition:all .25s ease; }
.quickview-backdrop.active .quickview-card { transform:translateY(0); opacity:1; }
.qv-close { position:absolute; top:12px; right:12px; border:none; background:#eee; border-radius:50%; width:32px; height:32px; cursor:pointer; }
.qv-content { display:grid; gap:20px; }
@media(min-width:768px){ .qv-content{grid-template-columns:1fr 1fr; gap:24px;} }
.qv-media img{width:100%; border-radius:8px;}
.qv-title{font-size:22px; margin:0 0 6px;}
.qv-price{font-weight:700; margin-bottom:10px;}
.qv-desc{font-size:14px; margin-bottom:14px; opacity:.9;}
.qv-options label{font-size:12px; margin:8px 0 4px; display:block;}
.qv-options select{width:100%; padding:8px; border:1px solid #ddd; border-radius:4px; margin-bottom:10px;}
.qv-add{background:#000; color:#fff; padding:12px 16px; border-radius:4px; width:100%; font-weight:600; cursor:pointer;}
.qv-status{margin-top:10px; font-size:14px; color:green;}
</style>

<script>
(function(){
  const BASE = window.Shopify.routes.root;
  const ROOT = document.querySelector('[data-qv-root]');
  const MEDIA = ROOT.querySelector('.qv-media');
  const TITLE = ROOT.querySelector('.qv-title');
  const PRICE = ROOT.querySelector('.qv-price');
  const DESC = ROOT.querySelector('.qv-desc');
  const OPTS = ROOT.querySelector('.qv-options');
  const VAR_INPUT = ROOT.querySelector('.qv-variant-id');
  const FORM = ROOT.querySelector('.qv-form');
  const STATUS = ROOT.querySelector('.qv-status');
  const CLOSE = ROOT.querySelector('.qv-close');
  const JACKET_VARIANT_ID = 9843130663219; // Soft Winter Jacket

  function formatMoney(cents){ return (cents/100).toLocaleString(undefined,{style:"currency",currency:"{{ shop.currency }}"}) }
  function getJSON(url,opts){ return fetch(url,opts).then(r=>r.json()); }

  document.querySelectorAll('.quick-btn').forEach(btn=>{
    btn.addEventListener('click',()=>{
      const handle=btn.dataset.handle;
      getJSON(BASE+'products/'+handle+'.js').then(prod=>{
        ROOT.hidden=false; ROOT.classList.add('active');
        MEDIA.innerHTML=`<img src="${prod.featured_image}" alt="${prod.title}">`;
        TITLE.textContent=prod.title;
        PRICE.textContent=formatMoney(prod.price);
        DESC.textContent=prod.description.replace(/<\/?[^>]+(>|$)/g,"");

        buildOptions(prod);
        STATUS.textContent='';
      });
    });
  });

  CLOSE.addEventListener('click',()=>{ ROOT.classList.remove('active'); setTimeout(()=>ROOT.hidden=true,200); });

  function buildOptions(product){
    OPTS.innerHTML='';
    product.options.forEach((opt,optIndex)=>{
      const label=document.createElement('label');
      label.textContent="Choose "+opt;
      const select=document.createElement('select');
      select.dataset.index=optIndex+1;
      select.innerHTML=`<option value="">Select ${opt}</option>`;
      const values=[...new Set(product.variants.map(v=>v['option'+(optIndex+1)]))];
      values.forEach(v=>select.append(new Option(v,v)));
      select.onchange=()=>updateVariant(product);
      OPTS.appendChild(label);
      OPTS.appendChild(select);
    });
  }

  function updateVariant(product){
    const selects=OPTS.querySelectorAll('select');
    const chosen=[...selects].map(s=>s.value);
    const found=product.variants.find(v=>chosen.every((val,i)=>!val||v['option'+(i+1)]===val));
    if(found){ VAR_INPUT.value=found.id; PRICE.textContent=formatMoney(found.price); }
    else { VAR_INPUT.value=''; }
  }

  FORM.addEventListener('submit',function(e){
    e.preventDefault();
    const variantId=VAR_INPUT.value;
    if(!variantId){ STATUS.textContent="Please select all options"; return; }

    getJSON(BASE+'cart/add.js',{
      method:'POST',
      headers:{'Content-Type':'application/json','Accept':'application/json'},
      body:JSON.stringify({id:Number(variantId),quantity:1})
    }).then(added=>{
      STATUS.textContent=added.product_title+' added âœ…';
      refreshCartCount();

      // check exact match for Black + Medium
      const selects=OPTS.querySelectorAll('select');
      const selections={};
      selects.forEach((s,i)=>{ selections["option"+(i+1)]=s.value.toLowerCase(); });

      if(selections.option1==="black" && selections.option2==="medium"){
        getJSON(BASE+'cart.js').then(cart=>{
          const exists=cart.items.some(item=>item.id==JACKET_VARIANT_ID);
          if(!exists){
            return getJSON(BASE+'cart/add.js',{
              method:'POST',
              headers:{'Content-Type':'application/json','Accept':'application/json'},
              body:JSON.stringify({id:JACKET_VARIANT_ID,quantity:1})
            }).then(()=>{ STATUS.textContent+=' + Soft Winter Jacket added ðŸŽ‰'; refreshCartCount(); });
          }
        });
      }

      // Close modal after add
      setTimeout(()=>{ ROOT.classList.remove('active'); setTimeout(()=>ROOT.hidden=true,200); },1000);
    });
  });

  function refreshCartCount(){
    fetch(BASE+'cart.js').then(r=>r.json()).then(cart=>{
      document.querySelectorAll('[data-cart-count]').forEach(el=>el.textContent=cart.item_count);
    });
  }
})();
</script>

{% schema %}
{
  "name": "ProdGridQV",
  "settings": [],
  "blocks": [
    { "type": "p1", "name": "Product 1", "settings": [ { "type": "product", "id": "product", "label": "Select product" } ] },
    { "type": "p2", "name": "Product 2", "settings": [ { "type": "product", "id": "product", "label": "Select product" } ] },
    { "type": "p3", "name": "Product 3", "settings": [ { "type": "product", "id": "product", "label": "Select product" } ] },
    { "type": "p4", "name": "Product 4", "settings": [ { "type": "product", "id": "product", "label": "Select product" } ] },
    { "type": "p5", "name": "Product 5", "settings": [ { "type": "product", "id": "product", "label": "Select product" } ] },
    { "type": "p6", "name": "Product 6", "settings": [ { "type": "product", "id": "product", "label": "Select product" } ] }
  ],
  "max_blocks": 6,
  "presets": [ { "name": "ProdGridQV", "category": "Custom" } ]
}
{% endschema %}
