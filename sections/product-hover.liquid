{% comment %}
Product Grid with Hover + Quick View (Smooth Modal)
- Hover overlay shows product info + quick view button
- Modal (custom div, not <dialog>) slides in smoothly
- Add to cart works via AJAX
- Special rule: If product with Black + Medium is added â†’ also add Soft Winter Jacket (variant 9843130663219), but only once
{% endcomment %}

<section id="section-{{ section.id }}" class="custom-grid">
  <div class="grid">
    {% for block in section.blocks %}
      {% if block.settings.product != blank %}
        {% assign prod = all_products[block.settings.product] %}
        <div class="card" {{ block.shopify_attributes }}>
          <a href="{{ prod.url }}" class="card-media">
            {% if prod.featured_image %}
              <img 
                src="{{ prod.featured_image | img_url: '600x' }}" 
                alt="{{ prod.title }}" 
                loading="lazy" 
              />
            {% endif %}
          </a>
          <div class="hover-overlay">
            <div class="hover-info">
              <h3 class="card-title">{{ prod.title }}</h3>
              <div class="card-price">
                {% if prod.price_varies %}
                  From {{ prod.price_min | money }}
                {% else %}
                  {{ prod.price | money }}
                {% endif %}
              </div>
              <button 
                class="quick-btn" 
                data-product='{{ prod | json | escape }}'>
                Quick View
              </button>
            </div>
          </div>
        </div>
      {% else %}
        <div class="placeholder">Select a product</div>
      {% endif %}
    {% endfor %}
  </div>
</section>

<!-- Quick View Modal -->
<div class="quickview-backdrop">
  <div class="quickview-card">
    <button class="qv-close">Ã—</button>
    <div class="qv-content">
      <div class="qv-media"></div>
      <div class="qv-info">
        <h3 class="qv-title"></h3>
        <div class="qv-price"></div>
        <div class="qv-desc"></div>

        <form class="qv-form">
          <div class="qv-options"></div>
          <input type="hidden" name="id" class="qv-variant-id" />
          <button type="submit" class="qv-add">Add to cart</button>
        </form>
        <div class="qv-status" role="status" aria-live="polite"></div>
      </div>
    </div>
  </div>
</div>

<style>
/* Grid */
.custom-grid .grid { display: grid; grid-template-columns: repeat(2, 1fr); gap: 16px; }
@media (min-width: 768px){ .custom-grid .grid { grid-template-columns: repeat(3, 1fr); gap: 20px; } }

/* Card */
.card { border: 1px solid rgba(0,0,0,.08); border-radius: 12px; overflow: hidden; position: relative; transition: transform .25s ease; }
.card:hover { transform: translateY(-4px); }
.card-media img { width: 100%; height: auto; transition: transform .3s ease; }
.card:hover img { transform: scale(1.05); }

/* Overlay */
.hover-overlay { position: absolute; inset: 0; background: rgba(0,0,0,.6); display: flex; align-items: center; justify-content: center; opacity: 0; transition: opacity .3s ease; color: #fff; text-align: center; }
.card:hover .hover-overlay { opacity: 1; }
.quick-btn { background: #fff; color: #000; padding: 8px 14px; border: none; border-radius: 8px; cursor: pointer; font-weight: 600; }

/* Quick View Modal */
.quickview-backdrop { position: fixed; inset: 0; background: rgba(0,0,0,.6); display: none; align-items: center; justify-content: center; z-index: 1000; }
.quickview-card { background: #fff; border-radius: 12px; max-width: 600px; width: 90%; padding: 20px; position: relative; transform: translateY(30px); opacity: 0; transition: all .3s ease; }
.quickview-backdrop.active { display: flex; }
.quickview-backdrop.active .quickview-card { transform: translateY(0); opacity: 1; }

.qv-close { position: absolute; top: 10px; right: 10px; border: none; background: #eee; border-radius: 50%; width: 32px; height: 32px; cursor: pointer; }
.qv-media img { width: 100%; border-radius: 8px; margin-bottom: 12px; }
.qv-title { margin: 0 0 8px; font-size: 20px; }
.qv-price { font-weight: 700; margin-bottom: 8px; }
.qv-desc { font-size: 14px; margin-bottom: 12px; }
.qv-options select { width: 100%; padding: 6px; margin-bottom: 10px; border-radius: 6px; }
.qv-add { background: #000; color: #fff; border: none; padding: 10px 16px; border-radius: 8px; cursor: pointer; font-weight: 600; }
.qv-status { margin-top: 8px; font-size: 14px; color: green; }
</style>

<script>
(function(){
  const modal = document.querySelector('.quickview-backdrop');
  const card = modal.querySelector('.quickview-card');
  const mediaEl = modal.querySelector('.qv-media');
  const titleEl = modal.querySelector('.qv-title');
  const priceEl = modal.querySelector('.qv-price');
  const descEl = modal.querySelector('.qv-desc');
  const optionsEl = modal.querySelector('.qv-options');
  const variantInput = modal.querySelector('.qv-variant-id');
  const statusEl = modal.querySelector('.qv-status');
  const closeBtn = modal.querySelector('.qv-close');

  // Open Quick View
  document.querySelectorAll('.quick-btn').forEach(btn => {
    btn.addEventListener('click', function(){
      const productData = JSON.parse(btn.dataset.product);
      titleEl.textContent = productData.title;
      priceEl.textContent = Shopify.formatMoney(productData.price, "{{ shop.money_format }}");
      descEl.textContent = productData.description || '';
      mediaEl.innerHTML = '<img src="' + productData.featured_image + '" alt="' + productData.title + '" />';

      // Build variant selectors
      optionsEl.innerHTML = '';
      if(productData.options && productData.options.length > 0) {
        productData.options.forEach((opt, i) => {
          let select = document.createElement('select');
          select.dataset.index = i;
          opt.values.forEach(val => {
            let option = document.createElement('option');
            option.value = val;
            option.textContent = val;
            select.appendChild(option);
          });
          optionsEl.appendChild(select);
        });
      }

      variantInput.value = productData.variants[0].id;

      // Variant change
      optionsEl.querySelectorAll('select').forEach(sel => {
        sel.addEventListener('change', () => {
          const selectedOptions = Array.from(optionsEl.querySelectorAll('select')).map(s => s.value);
          const foundVariant = productData.variants.find(v => JSON.stringify(v.options) === JSON.stringify(selectedOptions));
          if(foundVariant) {
            variantInput.value = foundVariant.id;
            priceEl.textContent = Shopify.formatMoney(foundVariant.price, "{{ shop.money_format }}");
          }
        });
      });

      modal.classList.add('active');
    });
  });

  // Close modal
  closeBtn.addEventListener('click', ()=> modal.classList.remove('active'));
  modal.addEventListener('click', e => { if(e.target === modal) modal.classList.remove('active'); });

  // Add to cart
  modal.querySelector('.qv-form').addEventListener('submit', function(e){
    e.preventDefault();
    const variantId = variantInput.value;

    fetch('/cart/add.js', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ id: variantId, quantity: 1 })
    })
    .then(res => res.json())
    .then(data => {
      statusEl.textContent = data.title + " added to cart âœ…";

      // Special Rule: Black + Medium â†’ Add Jacket (only if not already in cart)
      if(data.options.includes("Black") && data.options.includes("Medium")) {
        fetch('/cart.js')
        .then(res => res.json())
        .then(cart => {
          const alreadyInCart = cart.items.some(item => item.id == 9843130663219);
          if(!alreadyInCart) {
            fetch('/cart/add.js', {
              method: 'POST',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ id: 9843130663219, quantity: 1 })
            }).then(()=> {
              statusEl.textContent += " + Soft Winter Jacket added automatically ðŸŽ‰";
            });
          }
        });
      }
    });
  });
})();
</script>

{% schema %}
{
  "name": "Product Grid QV",
  "settings": [],
  "blocks": [
    { "type": "product1", "name": "Product 1", "settings": [{ "type": "product", "id": "product", "label": "Select product" }] },
    { "type": "product2", "name": "Product 2", "settings": [{ "type": "product", "id": "product", "label": "Select product" }] },
    { "type": "product3", "name": "Product 3", "settings": [{ "type": "product", "id": "product", "label": "Select product" }] },
    { "type": "product4", "name": "Product 4", "settings": [{ "type": "product", "id": "product", "label": "Select product" }] },
    { "type": "product5", "name": "Product 5", "settings": [{ "type": "product", "id": "product", "label": "Select product" }] },
    { "type": "product6", "name": "Product 6", "settings": [{ "type": "product", "id": "product", "label": "Select product" }] }
  ],
  "max_blocks": 6,
  "presets": [
    { "name": "Product Grid QV", "category": "Custom" }
  ]
}
{% endschema %}
